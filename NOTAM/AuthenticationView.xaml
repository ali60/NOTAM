<Window x:Class="NOTAM.AuthenticationView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ViewModel="clr-namespace:NOTAM.ViewModel" xmlns:vw="clr-namespace:NOTAM" xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" xmlns:Behavior="clr-namespace:NOTAM.Behavior" Title="Login Page" Width="300" Height="300 "
        WindowStartupLocation="CenterScreen" Icon="/NOTAM;component/Properties/Airplane.ico" ResizeMode="NoResize" WindowStyle="ThreeDBorderWindow">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
        <DataTemplate DataType="{x:Type ViewModel:AuthenticationViewModel}">
            <vw:AuthenticationView/>
        </DataTemplate>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Margin"
                    Value="4" />
        </Style>
        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="Margin"
                    Value="4" />
        </Style>

        
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin"
                    Value="4" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError"
                         Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border 
            Background="{StaticResource Brush_HeaderBackground}" 
            BorderBrush="LightGray" 
            BorderThickness="1" 
            CornerRadius="5" 
            Margin="4" 
            Padding="4" 
            SnapsToDevicePixels="True" 
            >
                            <TextBlock 
              FontSize="14"
              FontWeight="Bold"
              Foreground="White" 
              HorizontalAlignment="Center"  
              Text="{TemplateBinding Content}" 
              />
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                    <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                        <DockPanel>
                            <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                            <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--
  This style ensures that the borders in the main window are consistent.
  -->
        <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="WhiteSmoke" />
            <Setter Property="BorderBrush" Value="LightGray" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="5" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
        </Style>


    </Window.Resources>

    
    <Grid>

        <i:Interaction.Behaviors>
            <Behavior:ValidationExceptionBehavior />
        </i:Interaction.Behaviors>

        <Grid.Resources>
            <DataTemplate DataType="{x:Type ValidationError}">
                <TextBlock 
          FontStyle="Italic"
          Foreground="Red"
          HorizontalAlignment="Right"
          Margin="0,1"
          Text="{Binding Path=ErrorContent}" 
          />
            </DataTemplate>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock Text="{Binding AuthenticatedUser}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                HorizontalAlignment="Center" TextWrapping="Wrap" FontWeight="Bold" 
               Margin="2,2,2,2"/>
        <TextBlock Text="Username:" Grid.Row="1" Grid.Column="0" Visibility="{Binding ShowLogin, Converter={StaticResource booleanToVisibilityConverter}}"/>
        <TextBlock Text="Password:" Grid.Row="2" Grid.Column="0" Visibility="{Binding ShowLogin, Converter={StaticResource booleanToVisibilityConverter}}" />
        <TextBox Text="{Binding Username}" Grid.Row="1" Grid.Column="1" Visibility="{Binding ShowLogin, Converter={StaticResource booleanToVisibilityConverter}}"/>
        <PasswordBox Name ="passwordBox" Grid.Row="2" Grid.Column="1" Visibility="{Binding Showlogin, Converter={StaticResource booleanToVisibilityConverter}}"/>
        <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1">
            <Button Content="Log in" Command="{Binding LoginCommand, Mode=OneTime}"
            CommandParameter="{Binding ElementName=passwordBox}"
            HorizontalAlignment="Center"/>
            <Button Content="Log out" Command="{Binding LogoutCommand, Mode=OneTime}"
            Visibility="{Binding IsAuthenticated, Converter={StaticResource booleanToVisibilityConverter}}"
            HorizontalAlignment="Center" Margin="2,0,0,0"/>
        </StackPanel>
        <TextBlock Text="{Binding Status}" Grid.Row="4" Grid.Column="1"
               HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Red" TextWrapping="Wrap" />
        <!--<StackPanel Grid.Row="5" Grid.Column="1" VerticalAlignment="Center">
            <Button Content="Show secret view" Command="{Binding ShowViewCommand}"
              HorizontalAlignment="Center" />
            <Button Content="Show admin view" Command="{Binding ShowViewCommand}" CommandParameter="Admin"
              HorizontalAlignment="Center" Margin="2,2,0,0" />
        </StackPanel>-->
    </Grid>
</Window>
